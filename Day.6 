{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c0c81256",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hello world\n"
     ]
    }
   ],
   "source": [
    "print(\"hello world\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b394e9fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hello world 23\n"
     ]
    }
   ],
   "source": [
    "print(\"hello world 23\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b47b0e74",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hello world  23\n"
     ]
    }
   ],
   "source": [
    "print(\"hello world \",23)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9533e491",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax. Perhaps you forgot a comma? (3392756296.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[4], line 1\u001b[0;36m\u001b[0m\n\u001b[0;31m    print(\"hello world a\", 23 s='-')\u001b[0m\n\u001b[0m                           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax. Perhaps you forgot a comma?\n"
     ]
    }
   ],
   "source": [
    "print(\"hello world a\", 23 s='-')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "deaa4db9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "today date is-23\n"
     ]
    }
   ],
   "source": [
    "print(\"today date is\", 23, sep = '-')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f3235920",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "praveen , srinivasarao,bharathi\n"
     ]
    }
   ],
   "source": [
    "print(\"praveen , srinivasarao,bharathi\" ,sep ='\\t')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "60b04ed4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\t2\t3\t4\t5\n"
     ]
    }
   ],
   "source": [
    "print(1,2,3,4,5, sep = '\\t')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cb5cde48",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1abc2abc3abc4abc5\n"
     ]
    }
   ],
   "source": [
    "print(1,2,3,4,5, sep = 'abc')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7d39ffc0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "praveen kumar\tsrinivasarao\tbharathi\n"
     ]
    }
   ],
   "source": [
    "print(\"praveen kumar\", end ='\\t')\n",
    "print(\"srinivasarao\", end='\\t')\n",
    "print(\"bharathi\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "47957e0e",
   "metadata": {},
   "outputs": [],
   "source": [
    "a=12\n",
    "b=12.1\n",
    "c=2+3j\n",
    "d=\"12gdfty\"\n",
    "e=True\n",
    "f=['python',12.2,54,2+5j]\n",
    "g=('python',12.2,54,2+5j)\n",
    "h={'name':'python'}\n",
    "i={1,2,3,4,5}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "03226504",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'int'>\n",
      "<class 'float'>\n",
      "<class 'complex'>\n",
      "<class 'str'>\n",
      "<class 'bool'>\n",
      "<class 'list'>\n",
      "<class 'tuple'>\n",
      "<class 'dict'>\n",
      "<class 'set'>\n"
     ]
    }
   ],
   "source": [
    "print(type(a))\n",
    "print(type(b))\n",
    "print(type(c))\n",
    "print(type(d))\n",
    "print(type(e))\n",
    "print(type(f))\n",
    "print(type(g))\n",
    "print(type(h))\n",
    "print(type(i))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "312de341",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "56\n"
     ]
    }
   ],
   "source": [
    "a=56\n",
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "9df056ce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "72\n",
      "72\n",
      "<class 'str'>\n"
     ]
    }
   ],
   "source": [
    "b=input()\n",
    "print(b)\n",
    "print(type(b))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "b458ca1b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "89\n",
      "89.0 <class 'float'>\n"
     ]
    }
   ],
   "source": [
    "a= float(input())\n",
    "print(a,type(a))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "c3192b19",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0b100010 0o42 0x22\n"
     ]
    }
   ],
   "source": [
    "a=34\n",
    "print(bin(a), oct(a), hex(a))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "f5e006db",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "34 34 34\n",
      "<class 'int'>\n"
     ]
    }
   ],
   "source": [
    "print(int('100010', 2), int('42', 8), int('22', 16))\n",
    "print(type(a))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c80b3ac3",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
